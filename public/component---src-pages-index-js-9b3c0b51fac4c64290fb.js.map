{"version":3,"file":"component---src-pages-index-js-9b3c0b51fac4c64290fb.js","mappings":"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","sources":["webpack://website/./src/components/Conditions/Conditions.js","webpack://website/./src/components/Header/Header.js","webpack://website/./src/components/Nav/Nav.js","webpack://website/./src/components/Main/Main.js","webpack://website/./src/components/Weather/Weather.js","webpack://website/./src/components/Sidebar/Sidebar.js","webpack://website/./src/components/Layout/Layout.js","webpack://website/./src/components/Forecast/Forecast.js","webpack://website/./src/pages/index.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Conditions = (props) => {\r\n    console.log(props.responseObj)\r\n    return (\r\n        <div>\r\n            {props.responseObj.cod === 200 ?\r\n                <div>\r\n                    <p><strong>This is  the weather where I am at:</strong></p>\r\n                    <p>It's {Math.round(props.responseObj.main.temp)}&deg; with {props.responseObj.weather[0].description}. It feels like {Math.round(props.responseObj.main.feels_like)}&deg; and the humidity level is {props.responseObj.main.humidity}%.</p>\r\n                </div>\r\n            : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conditions;","import * as React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <h1>{props.title}</h1>\r\n            {\r\n                props.description ? <p>{props.description}</p> : 0\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./nav.scss\"\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <nav className=\"site-navigation\">\r\n            <div className=\"site-title\">\r\n            <Link to=\"/\">Matt Loniero</Link>\r\n            </div>\r\n            <ul>\r\n                <li><Link to=\"/about\">Work</Link></li>\r\n                <li><Link to=\"/posts\">Skills</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import * as React from \"react\"\r\n\r\nconst Main = ({extraClasses, children}) => {\r\n    return(\r\n        <section className=\"site-content\">\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main","import React, {useState} from 'react';\r\nimport Conditions from '../Conditions/Conditions';\r\n\r\nconst Weather = () => {\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [city, setCity] = useState('Westlake Village');\r\n    let [unit, setUnit] = useState('imperial');\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n    function getForecast() {\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\r\n\t        \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"9445d8809dmsh3dd64d168da9a7ep12b8e2jsn5ee4c33053b1\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            setResponseObj(response)\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    if (Object.entries(responseObj).length === 0) {\r\n        getForecast()\r\n    }\r\n    return(\r\n        <div>\r\n            <Conditions responseObj={responseObj} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import * as React from \"react\"\r\nimport { StaticImage } from 'gatsby-plugin-image'\r\nimport Weather from \"../Weather/Weather\"\r\nimport \"./sidebar.scss\"\r\n\r\nconst links = [\r\n  {\r\n    text: \"Modern Vascular\",\r\n    url: \"https://modernvascular.com\",\r\n    description: \"Outpatient clinics providing minimally invasive endovascular procedures.\"\r\n  },\r\n  {\r\n    text: \"Semper Solaris\",\r\n    url: \"https://sempersolaris.com\",\r\n    description: \"California solar panel, roofing, heating, and air conditioning company.\"\r\n  },\r\n  {\r\n    text: \"Kevin Manthei (Composer)\",\r\n    url: \"https://kevinmantheimusic.com\",\r\n    description: \"Music composer for television, film, and video games.\"\r\n  }\r\n]\r\n\r\nconst Sidebar = () => {\r\n    return(\r\n        <aside className=\"site-sidebar\">\r\n            <h2>Projects</h2>\r\n            <ul>\r\n                {links.map(link => (\r\n                    <li key={link.url}>\r\n                    <span>\r\n                        <a\r\n                        href={`${link.url}?utm_source=sidebar&utm_medium=website&utm_campaign=companies`}\r\n                        >\r\n                        {link.text}\r\n                        </a>\r\n                        <p>{link.description}</p>\r\n                    </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Weather />\r\n            <figure>\r\n              <StaticImage\r\n                alt=\"Succulents\"\r\n                src=\"https://mattloniero.com/wp-content/uploads/2021/09/succulents.png\"\r\n              />\r\n              <figcaption>Illustration by Matt Loniero.</figcaption>\r\n            </figure>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import * as React from \"react\"\r\nimport Nav from \"../Nav/Nav\"\r\nimport Main from \"../Main/Main\"\r\nimport Sidebar from \"../Sidebar/Sidebar\"\r\nimport \"./layout.scss\"\r\n\r\nconst Layout = ({pageTitle, children}) => {\r\n    return(\r\n        <div className=\"layout\">\r\n            <title>{pageTitle}</title>\r\n            <Nav />\r\n            <main>\r\n                <Main>{children}</Main>\r\n                <Sidebar />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {useState} from 'react';\r\nimport Conditions from '../Conditions/Conditions';\r\nimport './forecast.scss';\r\n\r\nconst Forecast = () => {\r\n    let [responseObj, setResponseObj] = useState({});\r\n    let [city, setCity] = useState('');\r\n    let [unit, setUnit] = useState('imperial');\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n    function getForecast(e) {\r\n        e.preventDefault();\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\r\n\t        \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"9445d8809dmsh3dd64d168da9a7ep12b8e2jsn5ee4c33053b1\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            setResponseObj(response)\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    return(\r\n        <div>\r\n            <h2 className=\"weather-title\">Check the weather.</h2>\r\n            <form onSubmit={getForecast}>\r\n                <input \r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City\"\r\n                    maxLength=\"64\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                />\r\n                <div className=\"radios\">\r\n                    <label>\r\n                        <input\r\n                        className=\"radio\"\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === 'imperial'}\r\n                            value=\"imperial\"\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        />\r\n                        Farenheit\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                        className=\"radio\"\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === 'metric'}\r\n                            value=\"metric\"\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        />\r\n                        Celsius\r\n                    </label>\r\n                </div>\r\n                <button className=\"button\" type=\"submit\">Get Forecast</button>\r\n            </form>\r\n            <Conditions responseObj={responseObj} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast;","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport \"@fontsource/amiko\"\r\nimport Header from \"../components/Header/Header\"\r\nimport Layout from \"../components/Layout/Layout\"\r\nimport Forecast from '../components/Forecast/Forecast';\r\n\r\nconst IndexPage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteMetadata {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <Layout pageTitle={ data.site.siteMetadata.title }>\r\n      <Header title=\"Testing\" description=\"This is a test.\" />\r\n      <Forecast />\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default IndexPage\r\n"],"names":["props","console","log","responseObj","cod","Math","round","main","temp","weather","description","feels_like","humidity","title","className","Link","to","extraClasses","children","useState","setResponseObj","city","unit","uriEncodedCity","encodeURIComponent","Object","entries","length","fetch","then","response","json","catch","err","error","Conditions","links","text","url","map","link","key","href","S","alt","src","pageTitle","setCity","setUnit","onSubmit","e","preventDefault","type","placeholder","maxLength","value","onChange","target","name","checked","data","useStaticQuery","Layout","site","siteMetadata","Header"],"sourceRoot":""}